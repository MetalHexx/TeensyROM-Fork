
C:\Users\trav\AppData\Local\Temp\arduino\sketches\968149CCFE8D0A4C22C4914E5FB8B32A/Teensy.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60005704 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00019c90 l    d  .fini	00000000 .fini
00019c94 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
2000cec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6002d84c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 Teensy.ino.cpp
000013e0 l     F .text.itcm	000000c0 parse_hex_line(char const*, char*, unsigned int*, unsigned int*, unsigned int*) [clone .part.0] [clone .constprop.0]
20001df0 l     O .data	0000120b TeensyROMC64_bin
0000472c l     F .text.itcm	00000004 _GLOBAL__sub_I_strVersionNumber
2000d080 l     O .bss	00000020 update_firmware(Stream*, Stream*, unsigned long, unsigned long)::data
2005e068 l     O .bss	00000004 ParseChipHeader(unsigned char*)::ptrRAM_ImageEnd
2005e06c l     O .bss	00000060 update_firmware(Stream*, Stream*, unsigned long, unsigned long)::line
2005e0cc l     O .bss	00000004 flash_write_block::buf
2005e0d0 l     O .bss	00000004 flash_write_block::buf_count
2005e0d4 l     O .bss	00000004 flash_write_block::next_addr
60005850 l     O .text.progmem	00001397 SleepDirt_norm_ntsc_1000_6581_sid
60005704 l     O .text.progmem	0000014b KawariQuickChange_prg
20001cb8 l     O .data	00000009 OutputPins
200030d0 l     O .data	00000019 InputPins
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
2005e464 l     O .bss	00000004 s_hotCount
2005e468 l     O .bss	00000004 s_hotTemp
2005e46c l     O .bss	00000004 s_hot_ROOM
2005e470 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000d964 l     F .text.itcm	00000088 schedule_transfer
0000d9ec l     F .text.itcm	00000036 run_callbacks
0000da24 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2005e3e8 l     O .bss	00000008 endpoint0_buffer
2005e3f0 l     O .bss	00000004 endpoint0_notify_mask
2000d0a0 l     O .bss	00000008 endpoint0_setupdata
2005e3f4 l     O .bss	00000004 endpointN_notify_mask
2005e42c l     O .bss	00000008 reply_buffer
2005e549 l     O .bss	00000001 sof_usage
2005e550 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2005e542 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000474 l     F .text.itcm	00000000 register_tm_clones
00000498 l     F .text.itcm	00000000 frame_dummy
2005e40c l     O .bss	00000000 object.0
600056f8 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 SD.cpp
00004eec l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 usb_desc.c
2000c6f8 l     O .data	00000012 device_descriptor
2000c90c l     O .data	00000028 microsoft_os_compatible_id_desc
2000c934 l     O .data	00000012 microsoft_os_string_desc
60006ce4 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
0000d418 l     F .text.itcm	00000002 dummy_isr
20001764 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
000062ec l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00007044 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
0000892c l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00009144 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
00009240 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000a7ec l     F .text.itcm	00000030 sdIrs()
0000a81c l     F .text.itcm	00000014 isBusyDat()
0000a830 l     F .text.itcm	0000000c isBusyDMA()
0000a83c l     F .text.itcm	000000cc setSdclk(unsigned long)
0000aa10 l     F .text.itcm	00000128 initSDHC()
0000ab38 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0000ac74 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0000ad0c l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0000ae08 l     F .text.itcm	0000002c isBusyCMD13()
0000afc0 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0000b1d8 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2005e539 l     O .bss	00000001 m_initDone
2005dfec l     O .bss	00000004 m_sdClkKhz
2005e53a l     O .bss	00000001 m_version2
2005dff0 l     O .bss	00000004 m_errorLine
2005e53b l     O .bss	00000001 m_highCapacity
2005e53c l     O .bss	00000001 m_transferActive
2005dff4 l     O .bss	00000010 m_cid
2005e004 l     O .bss	00000010 m_csd
2005e014 l     O .bss	00000004 m_ocr
2005e018 l     O .bss	00000004 m_rca
2005e01c l     O .bss	00000004 m_busyFcn
2005e53d l     O .bss	00000001 m_dmaBusy
2005e020 l     O .bss	00000004 m_irqstat
2000c986 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0000beb0 l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001cc4 l     O .data	0000012c lookupTable
20002ffc l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
0000c1d4 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 Print.cpp
0000c688 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Time.cpp
200030ec l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0000d020 l     F .text.itcm	0000005c flash_wait
2005e546 l     O .bss	00000001 initialized
2005e478 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000e2d0 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000e330 l     F .text.itcm	000000b4 rx_event
0000e3e4 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000e474 l     F .text.itcm	000001b8 usb_serial_write.part.0
2005e434 l     O .bss	00000004 rx_available
2005e438 l     O .bss	00000010 rx_count
2005e547 l     O .bss	00000001 rx_head
2005e448 l     O .bss	00000010 rx_index
2005e458 l     O .bss	00000009 rx_list
2005e52c l     O .bss	00000002 rx_packet_size
2005e548 l     O .bss	00000001 rx_tail
2000cf00 l     O .bss	00000100 rx_transfer
2005e54a l     O .bss	00000001 transmit_previous_timeout
2005e52e l     O .bss	00000002 tx_available
2005e54b l     O .bss	00000001 tx_head
2005e54c l     O .bss	00000001 tx_noautoflush
2005e530 l     O .bss	00000002 tx_packet_size
2000d000 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2005e540 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-calloc.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
000108e4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-toupper.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00010a68 l     F .text.itcm	00000018 stdio_exit_handler
00010a80 l     F .text.itcm	00000040 cleanup_stdio
00010ac0 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vsprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strcasecmp.o
00000000 l    df *ABS*	00000000 libc_a-strcat.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-strncat.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-strrchr.o
00000000 l    df *ABS*	00000000 libc_a-stpcpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
00011d30 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
000167a0 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
000175b4 l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
000176f8 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00017868 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
00017af0 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00017f20 l     F .text.itcm	00000076 __sprint_r.part.0
00018f24 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
60005550 l     F .text.code	00000008 ___ZN9ExFatFile5mkdirEPS_PKcb_veneer
60005558 l     F .text.code	00000008 __free_veneer
60005560 l     F .text.code	00000008 __memset_veneer
60005568 l     F .text.code	00000008 ___ZN10FsBaseFile5closeEv_veneer
60005570 l     F .text.code	00000008 ___Z15SendMsgPrintflnPKcz_veneer
60005578 l     F .text.code	00000008 ___Z8DoC64IRQv_veneer
60005580 l     F .text.code	00000008 __atol_veneer
60005588 l     F .text.code	00000008 __strlen_veneer
60005590 l     F .text.code	00000008 __strncat_veneer
60005598 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
600055a0 l     F .text.code	00000008 __sm_set_pool_veneer
600055a8 l     F .text.code	00000008 ___ZN7FatFile4readEPvj_veneer
600055b0 l     F .text.code	00000008 __tempmonGetTemp_veneer
600055b8 l     F .text.code	00000008 __usb_init_serialnumber_veneer
600055c0 l     F .text.code	00000008 ___ZN7FatFile6removeEv_veneer
600055c8 l     F .text.code	00000008 ___ZN7FatFile4openEP9FatVolumePKci_veneer
600055d0 l     F .text.code	00000008 __memcpy_veneer
600055d8 l     F .text.code	00000008 ___ZN9ExFatFile8getName8EPcj_veneer
600055e0 l     F .text.code	00000008 ___ZN9ExFatFile6removeEv_veneer
600055e8 l     F .text.code	00000008 __sprintf_veneer
600055f0 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
600055f8 l     F .text.code	00000008 ___ZN9ExFatFile5writeEPKvj_veneer
60005600 l     F .text.code	00000008 ____libc_init_array_veneer
60005608 l     F .text.code	00000008 ___ZN5Print6printfEPKcz_veneer
60005610 l     F .text.code	00000008 __set_arm_clock_veneer
60005618 l     F .text.code	00000008 ___ZN7FatFile5mkdirEPS_PKcb_veneer
60005620 l     F .text.code	00000008 __malloc_veneer
60005628 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60005630 l     F .text.code	00000008 ___ZN7FatFile7getNameEPcj_veneer
60005638 l     F .text.code	00000008 ___Z12RemoteLaunchbPKc_veneer
60005640 l     F .text.code	00000008 ___ZN5Print13printNumber64Eyhh_veneer
60005648 l     F .text.code	00000008 ___Z10MenuChangev_veneer
60005650 l     F .text.code	00000008 __pwm_init_veneer
60005658 l     F .text.code	00000008 __usb_serial_putchar_veneer
60005660 l     F .text.code	00000008 __usb_serial_available_veneer
60005668 l     F .text.code	00000008 __strcpy_veneer
60005670 l     F .text.code	00000008 ___ZN7SDClass5beginEh_veneer
60005678 l     F .text.code	00000008 ___ZN10FsBaseFileC2ERKS__veneer
60005680 l     F .text.code	00000008 __usb_serial_write_veneer
60005688 l     F .text.code	00000008 __main_veneer
60005690 l     F .text.code	00000008 ___ZN7FatFile5writeEPKvj_veneer
60005698 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
600056a0 l     F .text.code	00000008 ___ZdlPvj_veneer
600056a8 l     F .text.code	00000008 __usb_serial_getchar_veneer
600056b0 l     F .text.code	00000008 __strcat_veneer
600056b8 l     F .text.code	00000008 __strrchr_veneer
600056c0 l     F .text.code	00000008 ___Znwj_veneer
600056c8 l     F .text.code	00000008 ___ZN9ExFatFile4readEPvj_veneer
600056d0 l     F .text.code	00000008 ___ZN8FsVolume4openEPKci_veneer
600056d8 l     F .text.code	00000008 __delay_veneer
600056e0 l     F .text.code	00000008 __stpcpy_veneer
600056e8 l     F .text.code	00000008 ___ZN10FsBaseFile8openNextEPS_i_veneer
600056f0 l     F .text.code	00000008 ___ZN9ExFatFile4openEP11ExFatVolumePKci_veneer
00019c40 l     F .text.itcm	00000008 ___init_veneer
00019c48 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
00019c50 l     F .text.itcm	00000008 ___Z13ServiceSerialv_veneer
00019c58 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
00019c60 l     F .text.itcm	00000008 ___Z14ParseARTHeaderv_veneer
00019c68 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00019c70 l     F .text.itcm	00000008 ___Z14ParseSIDHeaderPKc_veneer
00019c78 l     F .text.itcm	00000008 ___Z14ParseKLAHeaderv_veneer
00019c80 l     F .text.itcm	00000008 ___Z6runAppm_veneer
00001580  w    F .text.itcm	0000006e SDFile::getModifyTime(DateTimeFields&)
0000c104 g     F .text.itcm	000000b8 toUpcase(unsigned short)
00011330 g     F .text.itcm	00000046 stpcpy
0000e854 g     F .text.itcm	00000018 usb_serial_available
00012f8c g     F .text.itcm	00000062 __any_on
00019830 g     F .text.itcm	00000024 _isatty_r
0001179c g     F .text.itcm	000000ba strcpy
000090dc g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
00002924 g     F .text.itcm	0000005c UpDirectory()
60004d88 g     F .text.code	00000002 startup_default_late_hook
000113a8 g     F .text.itcm	0000002c _lseek_r
0000b334 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000ea24  w    F .text.itcm	000000d8 yield
00009ae8  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
2005e538 g     O .bss	00000001 WPLatched
2005e518 g     O .bss	00000004 usb_timer1_callback
00007ec4 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
0000c7ec g     F .text.itcm	000000a4 Print::printNumber64(unsigned long long, unsigned char, unsigned char)
2005e534 g     O .bss	00000001 CurrentIOHandler
60006c00 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
60004ea0 g     F .text.code	00000384 configure_external_ram
00009a68  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00007e50 g     F .text.itcm	00000074 FatFile::truncate()
000088f0  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00019b70 g     F .text.itcm	0000005a .hidden __floatdidf
00008258 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
0000964c g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
2005e024 g     O .bss	00000004 FsDateTime::callback
2005e26c g     O .bss	00000001 __lock___atexit_recursive_mutex
00010dc0 g     F .text.itcm	00000038 vsprintf
2000d8ac g     O .bss	00000004 CycleCountdown
00017a5c g     F .text.itcm	0000004c _wcrtomb_r
000083c0 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0000a3c0 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
00008a7c g     F .text.itcm	00000056 FatFormatter::initPbs()
0000c770 g     F .text.itcm	0000001c Print::println()
0000a7b4 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
20003268 g     O .data	00000070 vtable for DedicatedSpiCard
00002d08 g     F .text.itcm	00000c78 LoadFile(StructMenuItem*, FS*)
00010d30 g     F .text.itcm	00000020 __sseek
00010b94 g     F .text.itcm	0000003c __sinit
00005294 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
00019754 g     F .text.itcm	000000b0 __swbuf_r
00001728  w    F .text.itcm	00000028 File::flush()
2000bd4c g     O .data	0000002c IOHandler
000015f0  w    F .text.itcm	0000006e SDFile::getCreateTime(DateTimeFields&)
0000f668 g     F .text.itcm	0000000c __malloc_unlock
000017dc  w    F .text.itcm	000000b0 SDFile::openNextFile(unsigned char)
2005e060 g     O .bss	00000004 FsVolume::m_cwv
2000d2a8 g     O .bss	00000004 BigBuf
000074d0 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
2005e53f g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
00009a5c  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
600054ec g     F .text.code	00000054 analog_init
600034e0 g     F .text.code	00000080 GetDigits(unsigned char, unsigned long*)
000108d8 g     F .text.itcm	0000000c _strtod_r
00010d58 g     F .text.itcm	0000004a _vdprintf_r
00007238 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
00000678 g     F .text.itcm	00000048 InitHndlr_Ocean1()
0000a098 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
0000d07c g     F .text.itcm	00000048 eeprom_initialize
2000bd24 g     O .data	00000004 F_CPU_ACTUAL
20003350  w    O .data	0000005c vtable for SDFile
00017e6c g     F .text.itcm	000000b4 _sfread_r
00010ebc g     F .text.itcm	000000f8 memmove
2000c954 g     O .data	00000004 nS_PLAprop
0000b8ec g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0001257c g     F .text.itcm	0000004c _Balloc
00019c9c g       .ARM.exidx	00000000 __exidx_end
0000942c g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
2000d8b0 g     O .bss	00000004 DriveDirMenu
2005e53e g     O .bss	00000001 EventResponder::runningFromYield
0000bd68 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
2000c78c g     O .data	00000080 isr_table_gpio2
00009944 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
0000d904 g     F .text.itcm	00000060 tempmonGetTemp
2005e532 g     O .bss	00000001 BankReg
0000c708 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
2000c160 g     O .data	00000004 __atexit_recursive_mutex
0000f044 g     F .text.itcm	00000008 atol
00011450 g     F .text.itcm	0000000c __errno
00001948  w    F .text.itcm	00000026 SDFile::isDirectory()
00005e10 g     F .text.itcm	00000176 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00001bd0  w    F .text.itcm	00000044 File::write(unsigned char const*, unsigned int)
60003a70 g     F .text.code	000000cc CopyFileCommand()
60001000 g     O .text.headers	00000020 ImageVectorTable
00001dd0  w    F .text.itcm	000000a8 File::~File()
2005e038 g     O .bss	00000004 EventResponder::firstInterrupt
0000e254 g     F .text.itcm	00000004 usb_transfer_status
0000ecb8 g     F .text.itcm	00000084 sm_set_pool
2005e040 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
0000637c g     F .text.itcm	0000004c ExFatFormatter::writeUpcaseUnicode(unsigned short)
2005e3e4 g     O .bss	00000004 __stdio_exit_handler
00009770 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
0000702c g     F .text.itcm	00000018 ExFatPartition::rootLength()
00019bcc g     F .text.itcm	00000030 .hidden __aeabi_d2lz
60003e70 g     F .text.code	0000020c memInfo()
00001ae4  w    F .text.itcm	00000054 SDFile::setCreateTime(DateTimeFields const&)
00000f7c g     F .text.itcm	0000002c IO1Hndlr_Dinamic(unsigned char, bool)
0000e2c8  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00019804 g     F .text.itcm	0000002c _fstat_r
2000a2c4 g     O .data	00000370 digital_pin_to_info_PGM
00000554 g     F .text.itcm	0000000c InitHndlr_MagicDesk()
2005e3f8 g     O .bss	00000004 errno
0000bd80 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00006d9c g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
00010cec g     F .text.itcm	00000004 __seofread
0000c234 g     F .text.itcm	000000dc _spi_dma_rxISR0()
00019c98 g       .text.itcm	00000000 _etext
0000870c g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
2000cec0 g       .bss	00000000 _sbss
00008ad4 g     F .text.itcm	0000005c FatFormatter::writeMbr()
0000bbb8 g     F .text.itcm	00000006 sdCsInit(unsigned char)
2000c114 g     O .data	0000002c StatusFunction
00004d08 g     F .text.itcm	00000110 SDClass::mediaPresent()
0000a914 g     F .text.itcm	0000000c SdioCard::errorData() const
600017e0 g     F .text.code	0000003a RAM2blocks()
0000bac4 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
2000d0a8 g     O .bss	00000200 BankDecode
00006f4c g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00006478 g     F .text.itcm	0000052c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
2000bfe8 g     O .data	0000012c SerialStringBuf
0000cf8c g     F .text.itcm	00000024 digitalRead
60006cf0 g       *ABS*	00000000 _stextload
00004678 g     F .text.itcm	000000b4 loop
0000eafc g     F .text.itcm	0000007a flexpwm_init
0000d140 g     F .text.itcm	000000ec eepromemu_flash_write
2005dfc8 g     O .bss	00000004 SizeLeft_etext
60004d8c g     F .text.code	00000004 startup_debug_reset
0000e118 g     F .text.itcm	00000064 usb_config_rx
60001a4c g     F .text.code	00000344 ParseSIDHeader(char const*)
00002818 g     F .text.itcm	0000010c SetUpMainMenuROM()
0000502c g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0000b71c g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
2000c95c g     O .data	00000004 nS_VICStart
0000002c g     F .text.itcm	000002ec isrPHI2()
00004044 g     F .text.itcm	00000494 HandleExecution()
000006c0 g     F .text.itcm	0000000c InitHndlr_SuperGames()
2005e034 g     O .bss	00000004 EventResponder::lastInterrupt
00000f58 g     F .text.itcm	00000024 CycleHndlr_EpyxFastLoad()
000097f4 g     F .text.itcm	00000028 FsBaseFile::close()
0000c54c g     F .text.itcm	00000048 SPIClass::end()
0000d550 g     F .text.itcm	00000134 memcpy
000123a0 g     F .text.itcm	000001b0 __hexnan
0000169c  w    F .text.itcm	00000060 File::available()
00009b5c g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0000bfc8 g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
2000cec0 g     O .data	00000000 .hidden __TMC_END__
00006e20 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
2000dae4 g     O .bss	00000004 IO1
00007824 g     F .text.itcm	00000028 FatFile::peek()
00013010 g     F .text.itcm	00001b44 _svfprintf_r
00019af8 g     F .text.itcm	00000022 .hidden __floatsidf
2005e541  w    O .bss	00000001 SDFile::name()::zeroterm
2005e500 g     O .bss	00000004 systick_millis_count
00005c34 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
000014f0  w    F .text.itcm	0000003c SDFile::truncate(unsigned long long)
00000560 g     F .text.itcm	00000118 IO1Hndlr_MagicDesk(unsigned char, bool)
0000ed48 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
2005e54e g     O .bss	00000001 usb_configuration
00009a50  w    F .text.itcm	00000006 SdCardInterface::status()
0000ec6c g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000b984 g     F .text.itcm	00000030 SdioCard::syncDevice()
0000abc0 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
2005e543 g     O .bss	00000001 eepAddrToWrite
00001b84  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
0000784c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00012ecc g     F .text.itcm	00000062 __ratio
0000a184 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
60006c00  w    O .text.progmem	00000018 usb_string_manufacturer_name
0000f0dc g     F .text.itcm	00000010 malloc
00004c2c g     F .text.itcm	000000dc SDClass::format(int, char, Print&)
2000332c  w    O .data	00000024 vtable for FsFile
0000d8e0  w    F .text.itcm	0000000a _fstat
00017ac0 g     F .text.itcm	00000006 iswspace
00016760 g     F .text.itcm	00000040 __assert_func
0000c1bc  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
2000bf28 g     O .data	00000030 IOHndlr_TeensyROM
200002a8 g     O .data	000000c8 __mprec_tens
600053b0 g     F .text.code	000000e8 usb_init
2005e537 g     O .bss	00000001 RemoteLaunched
00009a58  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00001c9c  w    F .text.itcm	0000008e SDFile::seek(unsigned long long, int)
2005e2a8 g     O .bss	00000004 __malloc_top_pad
00017e30 g     F .text.itcm	0000003a __ssrefill_r
2005e504 g     O .bss	00000004 systick_safe_read
2005e536 g     O .bss	00000001 NumCrtChips
aaaaaaff g       *ABS*	00000000 _flexram_bank_config
00005f88 g     F .text.itcm	000000e4 ExFatFile::truncate()
2000c168 g     O .data	00000000 .hidden __dso_handle
0000d22c g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
00019ad8 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
000166dc g     F .text.itcm	00000008 _localeconv_r
00017a04 g     F .text.itcm	00000004 _strtoull_r
0000bd10 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00018fa4 g     F .text.itcm	000002f4 __sfvwrite_r
000127d0 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
00008c4c g     F .text.itcm	000001c4 FatFormatter::makeFat32()
60006c80 g     O .text.progmem	00000062 usb_config_descriptor_480
2005e51e g     O .bss	00000002 HIROM_Mask
0000ed78 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00019854 g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000bd60 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
000070f8 g     F .text.itcm	00000034 FatFile::addCluster()
00011400 g     F .text.itcm	00000024 _sbrk_r
0000a98c g     F .text.itcm	0000001c SdioCard::type() const
60003248 g     F .text.code	00000104 DeleteFile(char const*, FS&)
60004d80 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
0000e8dc g     F .text.itcm	00000020 usb_serial_getchar
000014a0  w    F .text.itcm	00000050 SDFile::name()
2005e508 g     O .bss	00000008 usb_cdc_line_coding
0000cf38 g     F .text.itcm	00000054 digitalWrite
2005e03c g     O .bss	00000004 EventResponder::lastYield
00005004 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
000113d4 g     F .text.itcm	0000002c _read_r
6000349c g     F .text.code	00000044 AddAndCheckSource(StructMenuItem, unsigned long*)
2000d2ac g     O .bss	00000600 CrtChips
000019d0  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00009adc  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000630c g     F .text.itcm	0000002e ExFatFormatter::syncUpcase()
0000152c  w    F .text.itcm	00000054 SDFile::setModifyTime(DateTimeFields const&)
000163a4 g     F .text.itcm	000000c6 _fclose_r
0000114c g     F .text.itcm	000000c8 IO1Hndlr_FunPlay(unsigned char, bool)
600019bc g     F .text.code	0000004c ParseKLAHeader()
2005e3fc g     O .bss	00000010 extmem_smalloc_pool
2005e2a0 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a288 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
000017a4  w    F .text.itcm	0000001a SDFile::position()
0000cfb0 g     F .text.itcm	00000070 pinMode
0000c890 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
00019b1c g     F .text.itcm	00000042 .hidden __extendsfdf2
00014b54 g     F .text.itcm	00001850 __ssvfscanf_r
00019860 g     F .text.itcm	00000276 .hidden __adddf3
2005e535 g     O .bss	00000001 EmulateVicCycles
6002dc00 g     O .text.csf	00000c00 hab_csf
000016fc  w    F .text.itcm	0000002c File::peek()
00009484 g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
2000c140 g     O .data	00000020 TeensyROMMenu
00000e90  w    F .text.itcm	000000c8 SDClass::open(char const*, unsigned char)
00012d34 g     F .text.itcm	000000c2 __b2d
00000818 g     F .text.itcm	00000554 IO1Hndlr_TeensyROM(unsigned char, bool)
00019c94 g       .ARM.exidx	00000000 __exidx_start
2005dfe4 g     O .bss	00000004 XferImage
70000000 g       .bss.extram	00000000 _extram_end
0000d8ec  w    F .text.itcm	00000004 _isatty
2005e030 g     O .bss	00000004 EventResponder::firstYield
2000daec g     O .bss	00000004 LastCycCnt
00000318 g     F .text.itcm	00000020 flash_sector_not_erased
0000c06c g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00001ab0  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0000f68c g     F .text.itcm	000003d8 _realloc_r
000019b8  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
0001145c g     F .text.itcm	00000048 __libc_init_array
00001970  w    F .text.itcm	00000046 SDFile::rewindDirectory()
2005dfe0 g     O .bss	00000004 StrSIDInfo
000027a4 g     F .text.itcm	00000074 MenuChange()
00005810 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0000a920 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
000049c4 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
20003538 g     O .data	00000100 __hexdig
2000c950 g     O .data	00000004 nS_MaxAdj
00005b84 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
2000c70c g     O .data	00000080 isr_table_gpio1
00019488 g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
00012680 g     F .text.itcm	000000b0 __s2b
0000a5b8  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0000d8fc  w    F .text.itcm	00000004 abort
0000e2b0  w    F .text.itcm	00000004 usb_serial_class::clear()
00019ad8 g     F .text.itcm	0000001e .hidden __floatunsidf
0000d8a0  w    F .text.itcm	00000034 _sbrk
6002098c g       *ABS*	00000000 _sdataload
00012b38 g     F .text.itcm	00000042 __mcmp
0000d41c g     F .text.itcm	00000104 attachInterrupt
200033d0 g     O .data	00000030 vtable for SDClass
2000c164 g     O .data	00000004 __brkval
2005e54d g     O .bss	00000001 usb_cdc_line_rtsdtr
2000bd78 g     O .data	00000030 IOHndlr_C64GameSystem3
00000338 g     F .text.itcm	0000007c flash_move
0000203c g     F .text.itcm	00000768 LoadDirectory(FS*)
60005540 g     F .text.code	00000000 _init
0000e62c g     F .text.itcm	00000002 usb_serial_reset
000071a4 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
2005e51c g     O .bss	00000002 BigBufCount
2000be98 g     O .data	00000030 IOHndlr_None
00010a2c g     F .text.itcm	0000001c strtol
0000d2e4 g     F .text.itcm	00000134 eeprom_write_byte
000018f4  w    F .text.itcm	00000054 SDClass::remove(char const*)
00000e68  w    F .text.itcm	00000028 SDFile::close()
00001c14  w    F .text.itcm	00000040 SDFile::~SDFile()
00019c00 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
60006c1c g     O .text.progmem	00000062 usb_config_descriptor_12
000003b4 g     F .text.itcm	000000c0 irq_gpio6789
0000fa68 g     F .text.itcm	00000e70 _strtod_l
00012368 g     F .text.itcm	00000036 __match
0000bce8 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
2005e580 g       .bss	00000000 _ebss
60001d90 g     F .text.code	00000034 LoadMainSIDforXfer()
0000b3bc g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00001a1c  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
00011304 g     F .text.itcm	0000002c strrchr
00012730 g     F .text.itcm	00000040 __hi0bits
00004f6c g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60004584 g     F .text.code	0000009c CrashReportClass::clear()
00004e18 g     F .text.itcm	000000d4 SDClass::begin(unsigned char)
0000f04c g     F .text.itcm	00000018 calloc
00005cd8 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20203080 g       .bss.dma	00000000 _heap_start
6000181c g     F .text.code	00000048 MakeBuildInfo()
2005e270 g     O .bss	00000001 __lock___malloc_recursive_mutex
000049c0  w    F .text.itcm	00000002 SDClass::~SDClass()
2005e2ac g     O .bss	00000138 __sf
2000bce8 g     O .data	00000004 CrashReport
00009dbc g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00001dd0  w    F .text.itcm	000000a8 File::~File()
00000004 g       *ABS*	00000000 _itcm_block_count
2000cee0 g     O .bss	00000020 endpoint0_transfer_data
00008ec4 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000be60 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
0000d688 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000eb78 g     F .text.itcm	000000f4 pwm_init
00019860 g     F .text.itcm	00000276 .hidden __aeabi_dadd
2005e526 g     O .bss	00000002 SelItemFullIdx
000110ac g     F .text.itcm	0000003e strcat
6002e800 g       .text.csf	00000000 __text_csf_end
60005224 g     F .text.code	0000005c usb_pll_start
00012988 g     F .text.itcm	000000c0 __pow5mult
00007a7c g     F .text.itcm	00000090 FatFile::rmdir()
2000325c g     O .data	0000000c vtable for CrashReportClass
00019b60 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
0000934c g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
0000a7e8  w    F .text.itcm	00000002 SdioCard::end()
0000188c  w    F .text.itcm	00000036 SDClass::exists(char const*)
0000d520 g     F .text.itcm	00000020 detachInterrupt
2000cec0 g     O .bss	00000020 endpoint0_transfer_ack
2005e510 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00002004 g     F .text.itcm	00000038 SetDriveDirMenuNameType(unsigned short, char const*)
0000e210 g     F .text.itcm	00000028 usb_transmit
60001724 g     F .text.code	000000bc LastPicture()
0000c660 g     F .text.itcm	00000020 systick_isr
600039a8 g     F .text.code	000000c8 DeleteFileCommand()
2000bf58 g     O .data	00000030 IOHndlr_ZaxxonSuper
2000daf4 g     O .bss	00050000 RAM_Image
000114b0 g     F .text.itcm	00000002 __retarget_lock_release_recursive
2005e528 g     O .bss	00000002 StreamOffsetAddr
600033e4 g     F .text.code	000000b8 runApp(unsigned long)
2000bfd8 g     O .data	00000010 Serial
0000c680  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
000098cc g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
60004d80  w    F .text.code	00000002 startup_early_hook
00005844 g     F .text.itcm	00000092 ExFatFile::addCluster()
2005e028 g     O .bss	00000004 FsDateTime::callback2
20003300  w    O .data	0000002c vtable for File
00009c68 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
00004b00  w    F .text.itcm	000000f0 SDClass::usedSize()
0000e810 g     F .text.itcm	00000044 usb_serial_peekchar
60003560 g     F .text.code	0000001c PrintDebugLog()
2005dfd0 g     O .bss	00000010 StrMachineInfo
000039a8 g     F .text.itcm	0000006c read_ascii_line(Stream*, char*, int)
00010bd0 g     F .text.itcm	0000000c __sfp_lock_acquire
2005e520 g     O .bss	00000002 LOROM_Mask
00011860 g     F .text.itcm	00000000 memchr
0000940c g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
0000cb4c g     F .text.itcm	000002f0 set_arm_clock
2005e4fc g     O .bss	00000004 systick_cycle_count
60003b3c g     F .text.code	00000134 GetDirectoryCommand()
2000c970 g     O .data	00000016 usb_string_serial_number_default
00003a14 g     F .text.itcm	00000072 process_hex_record(hex_info_t*)
00011b24 g     F .text.itcm	0000020c _free_r
0000a428 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
0001961c g     F .text.itcm	00000060 category
0000a630 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0000af08 g     F .text.itcm	000000b8 SdioCard::readStop()
00009a60  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011378 g     F .text.itcm	0000000c __locale_mb_cur_max
2005e424 g     O .bss	00000004 ptrFreeITCM
00017aa8 g     F .text.itcm	00000016 _wcsrtombs_r
000004d8 g     F .text.itcm	00000002 getNtpTime()
60001dc4 g     F .text.code	0000003c GetStorageDevice(unsigned long)
2005e0dc g     O .bss	00000190 __atexit0
0000e2c0  w    F .text.itcm	00000004 usb_serial_class::flush()
00000d6c g     F .text.itcm	000000fc InitHndlr_EasyFlash()
00001f74 g     F .text.itcm	00000034 AddDirEntry(char const*)
000063c8 g     F .text.itcm	000000b0 ExFatFormatter::writeUpcase(unsigned long)
00017db0 g     F .text.itcm	00000080 _sungetc_r
000029d8 g     F .text.itcm	00000048 SendMsgPrintfln(char const*, ...)
0001985c g     F .text.itcm	0000027a .hidden __aeabi_dsub
2000c6e0 g     O .data	00000004 __malloc_sbrk_base
0000e2b8  w    F .text.itcm	00000004 usb_serial_class::read()
00017864 g     F .text.itcm	00000004 _strtoll_r
000087e0 g     F .text.itcm	00000110 FatFile::remove()
00019b60 g     F .text.itcm	0000006a .hidden __floatundidf
0000d8f0  w    F .text.itcm	00000006 _lseek
0000d8f8  w    F .text.itcm	00000004 __cxa_pure_virtual
00012a48 g     F .text.itcm	000000f0 __lshift
000073e4 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
2005e524 g     O .bss	00000002 NumItemsFull
0000e1e0 g     F .text.itcm	00000030 usb_prepare_transfer
00009a64  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000d714 g     F .text.itcm	0000018c unused_interrupt_vector
00017cb0 g     F .text.itcm	00000100 __ssprint_r
2005e514 g     O .bss	00000004 usb_timer0_callback
60005280 g     F .text.code	00000130 tempmon_init
00008134 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00010df8 g     F .text.itcm	00000062 _vasnprintf_r
00001d2c g     F .text.itcm	000000a4 SearchForLetter()
000119fc g     F .text.itcm	00000088 __register_exitproc
00009a6c g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00005718 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000d0c4 g     F .text.itcm	0000007c eeprom_read_byte
00011214 g     F .text.itcm	0000008a strncmp
00008078 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
60001e00 g     F .text.code	00000254 GetFileStream(unsigned long, char*, FS*, File&)
00003980 g     F .text.itcm	00000028 SendMsgPrintf(char const*, ...)
2005dfe8 g     O .bss	00000004 XferSize
00005d38 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00008b30 g     F .text.itcm	0000011c FatFormatter::makeFat16()
00000530 g     F .text.itcm	00000024 ROMLHndlr_EpyxFastLoad(unsigned long)
0000e86c g     F .text.itcm	00000070 usb_serial_flush_input
00006ee0 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
0001282c g     F .text.itcm	0000015c __multiply
0000e8fc g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00009ea4 g     F .text.itcm	000001f4 SharedSpiCard::begin(SdSpiConfig)
60003648 g     F .text.code	00000288 ReceiveFileData(File&, unsigned long, unsigned long&)
000112a0 g     F .text.itcm	00000064 strncpy
2005e278 g     O .bss	00000028 __malloc_current_mallinfo
200031c8 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
2005e533 g     O .bss	00000001 BtnPressed
00012df8 g     F .text.itcm	000000d4 __d2b
0000a698 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
00011058 g     F .text.itcm	00000054 strcasecmp
00000020 g     F .text.itcm	0000000c isrButton()
0000a7e0  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60005498 g     F .text.code	00000054 _reboot_Teensyduino_
0000a97c  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60004d84 g     F .text.code	00000002 startup_default_middle_hook
0000f674 g     F .text.itcm	00000018 realloc
00009af8 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a110 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
00002c54 g     F .text.itcm	000000b4 SetTypeFromCRT(StructMenuItem*, unsigned char, unsigned char)
0000ae34 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
000176f4 g     F .text.itcm	00000004 _strtoul_r
60001950 g     F .text.code	0000006c ParseARTHeader()
0000dae8 g     F .text.itcm	00000630 usb_isr
00010a48 g     F .text.itcm	0000000c __cxa_atexit
000050c8 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
60002120 g     F .text.code	00000a14 SendPagedDirectoryContents(FS&, char const*, int, int)
00011384 g     F .text.itcm	00000024 _close_r
00009098  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
2000bcec g     O .data	00000032 Ext_ItemType_Assoc
00019af8 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00009cf4 g     F .text.itcm	0000006e SharedSpiCard::readStop()
000018c4  w    F .text.itcm	00000018 SDFile::peek()
0000be08 g     F .text.itcm	00000056 FsCache::sync()
00003afc g     F .text.itcm	000001a0 update_firmware(Stream*, Stream*, unsigned long, unsigned long)
2000bf88 g     O .data	00000050 SPI
2000c80c g     O .data	00000080 isr_table_gpio3
00010e5c g     F .text.itcm	00000060 memcmp
200032d8  w    O .data	00000028 vtable for usb_serial_class
0000bda4 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
000114a8 g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000bbc0 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
2005e474 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00010c70 g     F .text.itcm	00000058 sscanf
00019310 g     F .text.itcm	000000cc __swsetup_r
0000f040  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
0000598c g     F .text.itcm	0000005e ExFatFile::rmdir()
000111b8 g     F .text.itcm	0000005a strncat
0000a220 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
00012f30 g     F .text.itcm	0000005c __copybits
2000c2d8 g     O .data	00000408 __malloc_av_
2005e0d8 g     O .bss	00000004 __atexit
00001a08  w    F .text.itcm	00000014 SDFile::flush()
00010cc8 g     F .text.itcm	00000022 __sread
00001020 g     F .text.itcm	00000084 IO2Hndlr_EpyxFastLoad(unsigned char, bool)
0000e990 g     F .text.itcm	00000094 usb_serial_flush_output
0000f65c g     F .text.itcm	0000000c __malloc_lock
000069f0 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
0000bec4 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
2000cc00 g     O .data	000002c0 _VectorsRam
0000bdb8 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
0000895c g     F .text.itcm	00000120 FatFormatter::initFatDir(unsigned char, unsigned long)
0001659c g     F .text.itcm	00000054 _fflush_r
0000f064 g     F .text.itcm	00000078 _calloc_r
2000daf0 g     O .bss	00000004 MenuSource
2000bdd8 g     O .data	00000030 IOHndlr_EasyFlash
0000c310 g     F .text.itcm	00000234 SPIClass::begin()
00008474 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
2005e551 g     O .bss	00000001 yield_active_check_flags
00005b24 g     F .text.itcm	0000005e ExFatFile::sync()
000114ac g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2005e54f g     O .bss	00000001 usb_high_speed
00007890 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0000ad6c g     F .text.itcm	0000007c SdioCard::isBusy()
2000be08 g     O .data	00000030 IOHndlr_EpyxFastLoad
2000c94c g     O .data	00000004 nS_DataSetup
00010fb4 g     F .text.itcm	000000a4 memset
0000d540 g     F .text.itcm	00000010 main
600038d0 g     F .text.code	00000038 GetUInt(unsigned long*, unsigned char)
2005e2a4 g     O .bss	00000004 __malloc_max_total_mem
00006b28 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
000114a4 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
0000a700 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
000004dc g     F .text.itcm	00000010 InitHndlr_TeensyROM()
6000334c g     F .text.code	00000098 disableCache()
0000606c g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0000bf28 g     F .text.itcm	000000a0 lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
000071e4 g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
00001b38  w    F .text.itcm	0000004c SDFile::available()
00010d50 g     F .text.itcm	00000008 __sclose
0000e258 g     F .text.itcm	00000058 usb_init_serialnumber
00010a28 g     F .text.itcm	00000004 _strtol_r
60005704 g       .text.code	00000000 __init_array_end
000168c8 g     F .text.itcm	00000cec _dtoa_r
0000f0fc g     F .text.itcm	00000560 _malloc_r
0000a358 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
00012ff0 g     F .text.itcm	0000001a __ascii_wctomb
000004c4  w    F .text.itcm	00000012 SDFile::isOpen()
00009770 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00019b70 g     F .text.itcm	0000005a .hidden __aeabi_l2d
2005e064 g     O .bss	00000004 FatVolume::m_cwv
00019298 g     F .text.itcm	00000076 __submore
20003470  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000c594 g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
60003c70 g     F .text.code	00000200 PostFileCommand()
000007dc g     F .text.itcm	00000024 ROMLHndlr_ZaxxonSuper(unsigned long)
0000c544 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0000cee4 g     F .text.itcm	00000054 micros
000044d8 g     F .text.itcm	00000084 DoC64IRQ()
6000357c g     F .text.code	00000014 SendU16(unsigned short)
2000dae8 g     O .bss	00000004 LOROM_Image
000059ec g     F .text.itcm	00000138 ExFatFile::syncDir()
00003f8c g     F .text.itcm	0000005c IOHandlerInit(unsigned char)
00011a84 g     F .text.itcm	000000a0 _malloc_trim_r
000194f0 g     F .text.itcm	00000106 _wcsnrtombs_l
60006c18 g     O .text.progmem	00000004 string0
0000e928 g     F .text.itcm	00000018 usb_serial_write
000012f4 g     F .text.itcm	000000ec IO1Hndlr_EasyFlash(unsigned char, bool)
60004d88  w    F .text.code	00000002 startup_late_hook
0000a798 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
00003c9c g     F .text.itcm	000002f0 DoFlashUpdate(FS*, char const*)
0000e2bc  w    F .text.itcm	00000004 usb_serial_class::available()
000114c8 g     F .text.itcm	000002dc strcmp
00007d6c g     F .text.itcm	0000000c FatFile::sync()
2005e428 g     O .bss	00000004 ptrSerialString
00008e10 g     F .text.itcm	000000b4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00001660  w    F .text.itcm	0000003a SDClass::mkdir(char const*)
20000000 g     O .data	00000280 endpoint_queue_head
60006be8  w    O .text.progmem	00000016 usb_string_product_name
0000ce3c g     F .text.itcm	000000a8 delay
00019c00 g     F .text.itcm	00000040 .hidden __fixunsdfdi
00004fe0 g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00019c90 g     F .fini	00000000 _fini
2000bda8 g     O .data	00000030 IOHndlr_Dinamic
000006cc g     F .text.itcm	000000e0 IO2Hndlr_EasyFlash(unsigned char, bool)
00009be8 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
00002a20 g     F .text.itcm	00000110 ParseCRTHeader(StructMenuItem*, unsigned char*, unsigned char*)
2000be68 g     O .data	00000030 IOHndlr_MagicDesk
00005820 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
2000bef8 g     O .data	00000030 IOHndlr_SuperGames
00010c30 g     F .text.itcm	00000040 sprintf
0000c7a8 g     F .text.itcm	0000001c Print::printf(char const*, ...)
00002b30 g     F .text.itcm	00000124 ParseChipHeader(unsigned char*)
0000c758 g     F .text.itcm	00000016 Print::print(long)
00000800 g     F .text.itcm	00000018 WriteEEPROM()
000071c4 g     F .text.itcm	0000001e FatFile::close()
0000d900 g     F .text.itcm	00000004 Panic_Temp_isr
00019bcc g     F .text.itcm	00000030 .hidden __fixdfdi
60001a08 g     F .text.code	00000044 SIDLoadError(char const*)
00001c54  w    F .text.itcm	00000048 SDFile::~SDFile()
60003968 g     F .text.code	00000040 LaunchFile()
00007278 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
000195f8 g     F .text.itcm	00000024 _wcsnrtombs_r
0000a978  w    F .text.itcm	00000002 SdioCard::~SdioCard()
000018dc  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00001750  w    F .text.itcm	00000054 File::write(unsigned char)
00011424 g     F .text.itcm	0000002c _write_r
6000407c g     F .text.code	000000d8 getFreeITCM()
00017ac8 g     F .text.itcm	00000028 iswspace_l
2005daf4 g     O .bss	000004d4 SD
0000b0dc g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
00001f28 g     F .text.itcm	0000004c InitDriveDirMenu()
000119f0 g     F .text.itcm	0000000c nanf
00003fe8 g     F .text.itcm	0000005c IOHandlerInitToNext()
2000c6f4 g     O .data	00000004 _impure_ptr
200033ac  w    O .data	00000024 vtable for Stream
00005268 g     F .text.itcm	0000002c ExFatFile::peek()
0001646c g     F .text.itcm	00000130 __sflush_r
20003238  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
00017a08 g     F .text.itcm	00000054 _mbrtowc_r
00001a88  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
00009a28 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00010be8 g     F .text.itcm	00000046 _fwalk_sglue
0000a908 g     F .text.itcm	0000000c SdioCard::errorCode() const
000075d4 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00001a9c  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
600056f8 g       .text.code	00000000 __preinit_array_end
60004620 g     F .text.code	00000704 CrashReportClass::printTo(Print&) const
00006ce0 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
2000c987 g     O .data	00000001 doReset
00012550 g     F .text.itcm	0000002a __ascii_mbtowc
00012cd0 g     F .text.itcm	00000064 __ulp
0000dabc g     F .text.itcm	0000002c usb_stop_sof_interrupts
2005e52a g     O .bss	00000002 StringOffset
00004730 g     F .text.itcm	00000290 setup
2000baa0 g     O .data	00000084 usb_descriptor_list
0000ade8 g     F .text.itcm	00000020 SdioCard::status()
60004154 g     F .text.code	00000430 ServiceSerial()
00007258 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
000004c0  w    F .text.itcm	00000002 Print::flush()
60001864 g     F .text.code	000000ec MakeBuildCPUInfoStr()
000119e0 g     F .text.itcm	00000010 nan
00004a48  w    F .text.itcm	00000052 SDClass::rmdir(char const*)
0000767c g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00007640 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
2005e02c g     O .bss	00000004 ExFatVolume::m_cwv
00009940 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
20060000 g       .text.csf	00000000 _estack
00001a30  w    F .text.itcm	00000058 File::read()
0000e940 g     F .text.itcm	00000050 usb_serial_write_buffer_free
2000bec8 g     O .data	00000030 IOHndlr_Ocean1
00016678 g     F .text.itcm	00000064 stpncpy
60002054 g     F .text.code	000000cc EnsureDirectory(char const*, FS&)
2000c6e8 g     O .data	0000000c __sglue
0000e630 g     F .text.itcm	00000100 usb_serial_configure
00001e78  w    F .text.itcm	000000b0 File::~File()
0000c78c  w    F .text.itcm	0000001c _write
2000cec0 g       .data	00000000 _edata
00006de0 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
2005e545 g     O .bss	00000001 external_psram_size
0000a978  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000bedc g     F .text.itcm	0000004c FsName::get16()
00009adc  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a2e4 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00009d7c g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00006abc g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
0000712c g     F .text.itcm	00000078 FatFile::addDirCluster()
000007ac g     F .text.itcm	00000030 InitHndlr_ZaxxonSuper()
000193dc g     F .text.itcm	000000aa __fputwc
60001678 g     F .text.code	000000ac NextPicture()
0000e2c4  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00009110 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
60002b34 g     F .text.code	00000714 CopyFile(char const*, char const*, FS&)
2000c88c g     O .data	00000080 isr_table_gpio4
0000d68c g     F .text.itcm	00000062 ultoa
000049c0  w    F .text.itcm	00000002 SDClass::~SDClass()
0000981c g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
00010cf0 g     F .text.itcm	0000003e __swrite
0000d684 g     F .text.itcm	00000004 operator new(unsigned int)
0000c618 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
2000c6e4 g     O .data	00000004 __malloc_trim_threshold
0000e2b4  w    F .text.itcm	00000004 usb_serial_class::peek()
60003908 g     F .text.code	00000060 ReceiveFileName(unsigned long*, char*)
0000a7e4  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00017c88 g     F .text.itcm	00000028 fiprintf
00017f98 g     F .text.itcm	00000f8c _vfiprintf_r
0000bbc4  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
2005e522 g     O .bss	00000002 NumDrvDirMenuItems
00012b7c g     F .text.itcm	00000154 __mdiff
0000a968 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00006d18 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00008f84 g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
2000bb48 g     O .data	00000120 _impure_data
00005380 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00017c24 g     F .text.itcm	00000064 _jp2uc_l
00010bdc g     F .text.itcm	0000000c __sfp_lock_release
000010a4 g     F .text.itcm	000000a8 IO1Hndlr_Ocean1(unsigned char, bool)
0000af08 g     F .text.itcm	000000b8 SdioCard::writeStop()
000165f0 g     F .text.itcm	00000088 __sccl
00004fa8 g     F .text.itcm	00000014 ExFatFile::close()
2000369c g     O .data	00000101 _ctype_
2000d8b4 g     O .bss	0000012c DriveDirPath
2000bc68 g     O .data	00000080 ASCIItoPETSCII
2000d9e0 g     O .bss	00000100 EZFlashRAM
0000d8d4  w    F .text.itcm	00000004 _read
600056f8 g       .text.code	00000000 __init_array_start
0000f040  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60004d24 g     F .text.code	0000005c CrashReportClass::operator bool()
2000bd20 g     O .data	00000004 F_BUS_ACTUAL
2000c958 g     O .data	00000004 nS_RWnReady
00001214 g     F .text.itcm	000000e0 IO2Hndlr_SuperGames(unsigned char, bool)
0000633c g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
2005e544 g     O .bss	00000001 eepDataToWrite
00004a9c  w    F .text.itcm	00000064 SDClass::rename(char const*, char const*)
000004ec g     F .text.itcm	00000020 InitHndlr_EpyxFastLoad()
60003590 g     F .text.code	00000048 SerialAvailabeTimeout()
00003a88 g     F .text.itcm	00000074 flash_write_block
00001fa8 g     F .text.itcm	0000005c Assoc_Ext_ItemType(char*)
0001967c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
2005e4f8 g     O .bss	00000004 sizeofFreeITCM
00009ae0  w    F .text.itcm	00000006 SharedSpiCard::end()
00011900 g     F .text.itcm	000000dc strlen
000075e4 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
2005dfcc g     O .bss	00000004 StartCycCnt
600035d8 g     F .text.code	00000070 GetPathParameter(char*)
00010a54 g     F .text.itcm	00000014 toupper
00007b0c g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
00011dd4 g     F .text.itcm	00000594 __gethex
60006be8 g     O .text.progmem	00000016 usb_string_product_name_default
00010da4 g     F .text.itcm	0000001c vdprintf
0000a9a8 g     F .text.itcm	00000068 SdioCard::sectorCount()
00007ca0 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
000110ec g     F .text.itcm	000000cc strchr
0000455c g     F .text.itcm	0000011c RemoteLaunch(bool, char const*)
2000be38 g     O .data	00000030 IOHndlr_FunPlay
60004d84  w    F .text.code	00000002 startup_middle_hook
20003400 g     O .data	00000070 vtable for SdioCard
00019b1c g     F .text.itcm	00000042 .hidden __aeabi_f2d
00000fa8 g     F .text.itcm	00000034 IO1Hndlr_C64GameSystem3(unsigned char, bool)
00009094 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
60004d90 g     F .text.code	00000110 configure_cache
0000a7dc  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000c9f4 g     F .text.itcm	00000158 breakTime(unsigned long, DateTimeFields&)
0000a540  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
0000050c g     F .text.itcm	00000024 IO1Hndlr_EpyxFastLoad(unsigned char, bool)
0000b818 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
0000bcd4 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
2000c948 g     O .data	00000004 nS_DataHold
0001985c g     F .text.itcm	0000027a .hidden __subdf3
600056f8 g       .text.code	00000000 __preinit_array_start
0000e238 g     F .text.itcm	0000001c usb_receive
00006be8 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00000fdc g     F .text.itcm	00000044 PollingHndlr_TeensyROM()
00012770 g     F .text.itcm	00000060 __lo0bits
2000dae0 g     O .bss	00000004 HIROM_Image
00006c94 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
00007bbc g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
0002e800 g       *ABS*	00000000 _flashimagelen
00007d78 g     F .text.itcm	000000d8 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00009d64 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
0000ed3c g     F .text.itcm	0000000a __aeabi_atexit
0000d6f0 g     F .text.itcm	00000024 rtc_get
2000bd28 g     O .data	00000024 HWID_IOH_Assoc
000058d8 g     F .text.itcm	000000b4 ExFatFile::remove()
00002980 g     F .text.itcm	00000058 SendMsgSerialStringBuf()
000166e8 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000c65c g     F .text.itcm	00000004 pendablesrvreq_isr
00004bf0  w    F .text.itcm	0000003c SDClass::totalSize()
000004bc  w    F .text.itcm	00000004 Print::availableForWrite()
2000c16c g     O .data	0000016c __global_locale
0000b444 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
00004fbc g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000e730 g     F .text.itcm	000000e0 usb_serial_read
2005e274 g     O .bss	00000001 __lock___sfp_recursive_mutex
0000c7c4 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000e17c g     F .text.itcm	00000064 usb_config_tx
0000d8d8  w    F .text.itcm	00000006 _close
000093e8 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
0000f0ec g     F .text.itcm	00000010 free
000069a4 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
000125dc g     F .text.itcm	000000a4 __multadd
000125c8 g     F .text.itcm	00000012 _Bfree
000017c0  w    F .text.itcm	0000001a SDFile::size()
2000c960 g     O .data	0000000f strVersionNumber
00008ef0 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
00001c14  w    F .text.itcm	00000040 SDFile::~SDFile()
2000c970  w    O .data	00000016 usb_string_serial_number
0000b9b4 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0000a944 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


